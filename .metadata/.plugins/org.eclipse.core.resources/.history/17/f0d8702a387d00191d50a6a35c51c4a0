package model;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Garage {

	private ArrayList<Vehicle> vehicleList = new ArrayList<Vehicle>();

	public void addVehicle(Vehicle v) {
		vehicleList.add(v);
	}

	public ArrayList<Vehicle> getVehicleList() {
		return vehicleList;
	}

	public void setVehicleList(ArrayList<Vehicle> vehicleList) {
		this.vehicleList = vehicleList;
	}

	public String fixAllVehicles() {
		String price = "No Vehicle";
		for (Vehicle v : vehicleList) {
			switch (v.getClass().getCanonicalName()) {
			case "Car":
				price = "The total cost to fix your vehicle is £" + v.engineCapacity * 100;
				break;
			case "Boat":
				price = "The total cost to fix your vehicle is £" + v.engineCapacity * 150;
				break;
			case "Bus":
				price = "The total cost to fix your vehicle is £" + v.engineCapacity * 250;
				break;
			}
		}
		return price;

	}

	public void fixVehicle(Vehicle v) {
		switch (v.getClass().getCanonicalName()) {
		case "Car":
			System.out.println("The total cost to fix your vehicle is £" + v.engineCapacity * 100);
			break;
		case "Boat":
			System.out.println("The total cost to fix your vehicle is £" + v.engineCapacity * 150);
			break;
		case "Bus":
			System.out.println("The total cost to fix your vehicle is £" + v.engineCapacity * 250);
			break;
		}
	}

	public void removeVehicle(Vehicle v) {
		vehicleList.remove(v);
	}

	public List<Vehicle> searchByVehicleType(String vehicleType) {
		return vehicleList.stream().filter(v -> v.getClass().getCanonicalName().equals(vehicleType))
				.collect(Collectors.toList());
	}

	public Vehicle searchByRegNumber(String regNumber) {
		return vehicleList.stream().filter(v -> v.regNumber.equals(regNumber)).findFirst().get();
	}

	public void emptyGarage() {
		vehicleList.clear();
	}

	public void printAllVehicles() {
		vehicleList.stream().forEach(v -> System.out.println(v));
	}

}
